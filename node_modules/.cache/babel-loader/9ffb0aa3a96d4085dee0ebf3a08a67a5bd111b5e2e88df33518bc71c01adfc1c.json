{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\Udemy\\\\React - The Complete Guide 2023\\\\react-complete-guide-code-04-react-state-events\\\\code\\\\02-adding-form-inputs\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpenseFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\n  const yearFilterHandler = year => {\n    setSelectedYear(year);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: selectedYear,\n        onYearChange: yearFilterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), props.items.map(expense => {\n        if (selectedYear === \"all\") {\n          return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n            id: expense.id,\n            title: expense.title,\n            amount: expense.amount,\n            date: expense.date\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this);\n        }\n        if (expense.date.getFullYear().toString() === selectedYear) {\n          return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n            id: expense.id,\n            title: expense.title,\n            amount: expense.amount,\n            date: expense.date\n          }, expense.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        } else return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"dSWAbeYWMCtwaeZYEEEnVkoo2Z0=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","selectedYear","setSelectedYear","yearFilterHandler","year","children","className","onYearChange","fileName","_jsxFileName","lineNumber","columnNumber","items","map","expense","id","title","amount","date","getFullYear","toString","_c","$RefreshReg$"],"sources":["C:/Programming/Udemy/React - The Complete Guide 2023/react-complete-guide-code-04-react-state-events/code/02-adding-form-inputs/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpenseFilter';\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState(\"2020\")\n  const yearFilterHandler = (year) => {\n    setSelectedYear(year);\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selectedYear={selectedYear} onYearChange={yearFilterHandler}></ExpensesFilter>\n        {props.items.map((expense) => {\n          if (selectedYear === \"all\") {\n            return (\n            <ExpenseItem \n                id={expense.id} \n                key={expense.id}\n                title={expense.title} \n                amount={expense.amount} \n                date={expense.date} />);}\n          if (expense.date.getFullYear().toString() === selectedYear) {\n            return (\n              <ExpenseItem \n                id={expense.id} \n                key={expense.id}\n                title={expense.title} \n                amount={expense.amount} \n                date={expense.date} />);\n          } else return null;\n          })}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAMW,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACH,IAAI;MAACY,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBR,OAAA,CAACF,cAAc;QAACM,YAAY,EAAEA,YAAa;QAACM,YAAY,EAAEJ;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,EAC7FZ,KAAK,CAACa,KAAK,CAACC,GAAG,CAAEC,OAAO,IAAK;QAC5B,IAAIb,YAAY,KAAK,KAAK,EAAE;UAC1B,oBACAJ,OAAA,CAACJ,WAAW;YACRsB,EAAE,EAAED,OAAO,CAACC,EAAG;YAEfC,KAAK,EAAEF,OAAO,CAACE,KAAM;YACrBC,MAAM,EAAEH,OAAO,CAACG,MAAO;YACvBC,IAAI,EAAEJ,OAAO,CAACI;UAAK,GAHdJ,OAAO,CAACC,EAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGM,CAAC;QAAE;QAC9B,IAAIG,OAAO,CAACI,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKnB,YAAY,EAAE;UAC1D,oBACEJ,OAAA,CAACJ,WAAW;YACVsB,EAAE,EAAED,OAAO,CAACC,EAAG;YAEfC,KAAK,EAAEF,OAAO,CAACE,KAAM;YACrBC,MAAM,EAAEH,OAAO,CAACG,MAAO;YACvBC,IAAI,EAAEJ,OAAO,CAACI;UAAK,GAHdJ,OAAO,CAACC,EAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGM,CAAC;QAC5B,CAAC,MAAM,OAAO,IAAI;MAClB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAX,EAAA,CAhCKF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}